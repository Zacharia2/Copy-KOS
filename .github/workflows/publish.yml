# This is a basic workflow to help you get started with Actions

name: publish pages

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          python-version: 3.8
      - uses: actions/cache@v3
        with:
          key: ${{ github.ref }}
          path: .cache
      - run: pip install mkdocs-material
      # - run: pip install mkdocs-static-i18n
      - run: pip install mkdocs-awesome-pages-plugin
      - run: mkdocs build
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1.0.7
        with:
          # Upload entire repository
          path: ./site
      - name: 部署到GitHub页面
        id: deployment
        uses: actions/deploy-pages@v2.0.0

                  

# mannually scripts
          # cd $out_dir
          # git init
          # git config user.name ${{ secrets.GIT_NAME }}
          # git config user.email ${{ secrets.GIT_EMAIL }}
          # git remote add upstream "git@github.com:${{ secrets.REPO }}.git"
          # git add -A
          # git commit -m "rebuild website ad $commit_info"
          # SSHPATH="$HOME/.ssh"
          # rm -rf "$SSHPATH"
          # mkdir -p "$SSHPATH"
          # echo "${{ secrets.ACCESS_KEY }}" > "$SSHPATH/id_rsa"
          # chmod 600 "$SSHPATH/id_rsa"
          # sudo sh -c "echo StrictHostKeyChecking no >>/etc/ssh/ssh_config"
          # git push upstream HEAD:gh-pages --force
          
